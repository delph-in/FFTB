- write -1 instead of 0 when skipping an item (if it has parses, at least)
- don't clobber results file ; if gold selected tree is not present, append it. otherwise noop.
- color code for: overconstrained but no active gold
- when multiple active gold trees exist, color coding becomes murky...
   - currently I compare to the first active tree and either show dark green or light blue.
   - should maybe be golden brown if multiple trees remain, or dark green/auto-accept if just one

things that *must* be done before any kind of release:
	[ ]   UI to select a gold profile for an update operation
	[ ]   verify that there is at least one *real* (reconstructable) tree left at each step, or *minimally* before saving
		-- actually, that could be expensive... if there is no reconstructable tree subject to the constraints, we have to rule out *every* remaining tree somehow or another.  we expect this to be rare except when there are very few trees left, so *usually* we should be fine... but it seems scary to try to offer a guarantee when it could take arbitrarily long to prove.
		+ we do it before saving, at least.
	[x]   save decisions; preferably in real-time as they are made, so you can return to your session from another browser or after the server is reset

strange bug:
	ws01 item 10030770 has 2 remaining trees (with all gold on), but no discriminants -- and all the lexemes are unambiguous.
		in that same item, and also in 10030700, there is another UI glitch where hyphenated words are being displayed incorrectly
	trec item 642 has 2 remaining trees but no discriminants
		- "at" can be at_date_p or at_temp -- two lexemes with different COMPKEYs but identical lexical types and identical predications
	ws01 item 10011280 claims 3 remaining trees, but two of them don't reconstruct

things that would be *nice*:
	various UI enhancements
	[ ] allow selection of old-style discriminants (i.e. break down unary chains), optionally
	[ ] sentence-picker screen could show additional info about each item, e.g. number of parses, number of choices made, remaining ambiguity
	[ ] a way to see an example [sub]tree before picking a discriminant
		-- also perhaps an easy way to pull up the documentation for various rules/types
	[ ] overlay/display of other annotation types (ILG, PTB)
	[ ] write the labeled tree of the prefered unpacking to 'result'

improvements for special use cases:
	- display various types of prior annotations:
		- Emily would like to be able to view Inter-Linear Glosses along with the sentence being treebanked
		- Stephan would like to be able to view an alternate tree (e.g. PTB) for the same sentence


done:
	+ when saving, write 'decision', 'preference', 'tree' and 'result', including the derivation tree and the mrs of the preferred result
	+ keep a cache of TSDB profiles; much faster than loading everytime we change sentences
	+ apply gold inferred discriminants in addition to gold manual discriminants
	+ pre-parse sentences and store their forests, to avoid having to spend time parsing while user is on-line
	+ make sure we are supporting all the relevant old-style discriminants
	+ hilight sentence span when mouseover a decision
	+ speed up SVG rendering
	+ use parse-node labels for tree drawing
	+ display items with ambiguous tokenization properly
	+ UI to allow inclusion of *some* but not *all* the old discriminants
	+ item id display -- part of a prev/next/list interface
	+ show parse tree when disambiguated (also for substrings when requested)
	+ option to show *all* remaining discriminants (or, say, up to 20)
	+ show lexical types instead of lexeme names
	+ enable use of lexical type constraints from old tsdb decisions
